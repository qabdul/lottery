{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/AbdulQ/Desktop/lottery/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/AbdulQ/Desktop/lottery/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\AbdulQ\\\\Desktop\\\\lottery\\\\pages\\\\campaigns\\\\requests\\\\index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport Layout from \"../../../component/Layout\";\nimport NoDataFound from \"../../../component/NoDataFound\";\nimport { Button, Table, Grid } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\nimport web3 from \"../../../etherium/web3\";\nimport Campaign from \"../../../etherium/Campaign\";\nimport RequestRow from \"../../../component/RequestRow\";\n\nvar index = function index(props) {\n  var Header = Table.Header,\n      Body = Table.Body,\n      HeaderCell = Table.HeaderCell,\n      Cell = Table.Cell,\n      Row = Table.Row;\n\n  var renderRows = function renderRows() {\n    return props.requests.map(function (request, index) {\n      return /*#__PURE__*/_jsxDEV(RequestRow, {\n        request: request,\n        address: props.address,\n        id: index,\n        total: props.totalApprovers\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All the Request Created for this Campaign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/campaigns/\".concat(props.address, \"/requests/new\"),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                floated: \"right\",\n                children: \"Create Request\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Recepient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Approval Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Approve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Finalize\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Table.Body, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, _this), props.requestsCount === 0 ? /*#__PURE__*/_jsxDEV(NoDataFound, {\n            message: \"Not Data Found, Please clcik on create Request button to create new one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, _this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\nindex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var address, campaign, requestsCount, totalApprovers, requests;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            address = props.query.address;\n            campaign = Campaign(props.query.address);\n            _context.next = 4;\n            return campaign.methods.getRequestsCount().call();\n\n          case 4:\n            requestsCount = _context.sent;\n            _context.next = 7;\n            return campaign.methods.approversCount().call();\n\n          case 7:\n            totalApprovers = _context.sent;\n            _context.next = 10;\n            return Promise.all(Array(parseInt(requestsCount)).fill().map(function (element, index) {\n              return campaign.methods.requests(index).call();\n            }));\n\n          case 10:\n            requests = _context.sent;\n            console.log(requests);\n            return _context.abrupt(\"return\", {\n              address: address,\n              requests: requests,\n              requestsCount: requestsCount,\n              totalApprovers: totalApprovers\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default index;","map":{"version":3,"sources":["C:/Users/AbdulQ/Desktop/lottery/pages/campaigns/requests/index.js"],"names":["React","Layout","NoDataFound","Button","Table","Grid","Link","web3","Campaign","RequestRow","index","props","Header","Body","HeaderCell","Cell","Row","renderRows","requests","map","request","address","totalApprovers","requestsCount","getInitialProps","query","campaign","methods","getRequestsCount","call","approversCount","Promise","all","Array","parseInt","fill","element","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../../../component/Layout\";\r\nimport NoDataFound from \"../../../component/NoDataFound\";\r\nimport { Button, Table, Grid } from \"semantic-ui-react\";\r\nimport { Link } from \"../../../routes\";\r\nimport web3 from \"../../../etherium/web3\";\r\nimport Campaign from \"../../../etherium/Campaign\";\r\nimport RequestRow from \"../../../component/RequestRow\";\r\n\r\nconst index = (props) => {\r\n  const { Header, Body, HeaderCell, Cell, Row } = Table;\r\n\r\n  const renderRows = () => {\r\n    return props.requests.map((request, index) => {\r\n      return (\r\n        <RequestRow\r\n          key={index}\r\n          request={request}\r\n          address={props.address}\r\n          id={index}\r\n          total={props.totalApprovers}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <h3>All the Request Created for this Campaign</h3>\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            {\" \"}\r\n            <Link to={`/campaigns/${props.address}/requests/new`}>\r\n              <a>\r\n                {\" \"}\r\n                <Button primary={true} floated=\"right\">\r\n                  Create Request\r\n                </Button>\r\n              </a>\r\n            </Link>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Table>\r\n              <Header>\r\n                <Row>\r\n                  <HeaderCell>ID</HeaderCell>\r\n                  <HeaderCell>Description</HeaderCell>\r\n                  <HeaderCell>Amount</HeaderCell>\r\n                  <HeaderCell>Recepient</HeaderCell>\r\n                  <HeaderCell>Approval Count</HeaderCell>\r\n                  <HeaderCell>Approve</HeaderCell>\r\n                  <HeaderCell>Finalize</HeaderCell>\r\n                </Row>\r\n              </Header>\r\n              <Table.Body></Table.Body>\r\n            </Table>\r\n            {props.requestsCount === 0 ? (\r\n              <NoDataFound message=\"Not Data Found, Please clcik on create Request button to create new one\" />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nindex.getInitialProps = async (props) => {\r\n  const address = props.query.address;\r\n  const campaign = Campaign(props.query.address);\r\n  const requestsCount = await campaign.methods.getRequestsCount().call();\r\n  const totalApprovers = await campaign.methods.approversCount().call();\r\n\r\n  const requests = await Promise.all(\r\n    Array(parseInt(requestsCount))\r\n      .fill()\r\n      .map((element, index) => {\r\n        return campaign.methods.requests(index).call();\r\n      })\r\n  );\r\n  console.log(requests);\r\n\r\n  return {\r\n    address,\r\n    requests,\r\n    requestsCount,\r\n    totalApprovers,\r\n  };\r\n};\r\n\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}