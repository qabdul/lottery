{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/AbdulQ/Desktop/lottery/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/AbdulQ/Desktop/lottery/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\AbdulQ\\\\Desktop\\\\lottery\\\\pages\\\\campaigns\\\\show.js\",\n    _this = this;\n\nimport React from \"react\";\nimport Layout from \"../../component/Layout\";\nimport Campaign from \"../../etherium/Campaign\";\nimport { Card } from \"semantic-ui-react\";\nimport web3 from \"../../etherium/web3\";\n\nvar show = function show(props) {\n  var renderCards = function renderCards() {\n    var minimumContribution = props.minimumContribution,\n        balance = props.balance,\n        requestCount = props.requestCount,\n        approversCount = props.approversCount,\n        manager = props.manager;\n    var items = [{\n      header: manager,\n      description: \"Manager is the only entity who can create request and withdraw money.\",\n      meta: \"Address of Manager\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: minimumContribution,\n      description: \"You must atleast this much wei to campaign\",\n      meta: \"Minimum Contribution(wei)\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: requestCount,\n      description: \"A request tries to withdraw money from contract.Request must be approved by approvers.\",\n      meta: \"No of Request\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: approversCount,\n      description: \"No of people who have donated money to contract.\",\n      meta: \"No of Approvers\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: balance,\n      description: \"Total Balance\",\n      meta: \"Total Balance\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Campagin Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this), renderCards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n};\n\nshow.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var campaign, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            campaign = Campaign(props.query.address);\n            _context.next = 3;\n            return campaign.methods.getSummary().call();\n\n          case 3:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              minimumContribution: result[0],\n              balance: result[1],\n              requestCount: result[2],\n              approversCount: result[3],\n              manager: result[4]\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default show;","map":{"version":3,"sources":["C:/Users/AbdulQ/Desktop/lottery/pages/campaigns/show.js"],"names":["React","Layout","Campaign","Card","web3","show","props","renderCards","minimumContribution","balance","requestCount","approversCount","manager","items","header","description","meta","style","overflowWrap","getInitialProps","campaign","query","address","methods","getSummary","call","result"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../../component/Layout\";\r\nimport Campaign from \"../../etherium/Campaign\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport web3 from \"../../etherium/web3\";\r\n\r\nconst show = (props) => {\r\n  const renderCards = () => {\r\n    const {\r\n      minimumContribution,\r\n      balance,\r\n      requestCount,\r\n      approversCount,\r\n      manager,\r\n    } = props;\r\n    const items = [\r\n      {\r\n        header: manager,\r\n        description:\r\n          \"Manager is the only entity who can create request and withdraw money.\",\r\n        meta: \"Address of Manager\",\r\n        style: { overflowWrap: \"break-word\" },\r\n      },\r\n      {\r\n        header: minimumContribution,\r\n        description: \"You must atleast this much wei to campaign\",\r\n        meta: \"Minimum Contribution(wei)\",\r\n        style: { overflowWrap: \"break-word\" },\r\n      },\r\n      {\r\n        header: requestCount,\r\n        description:\r\n          \"A request tries to withdraw money from contract.Request must be approved by approvers.\",\r\n        meta: \"No of Request\",\r\n        style: { overflowWrap: \"break-word\" },\r\n      },\r\n      {\r\n        header: approversCount,\r\n        description: \"No of people who have donated money to contract.\",\r\n        meta: \"No of Approvers\",\r\n        style: { overflowWrap: \"break-word\" },\r\n      },\r\n      {\r\n        header: balance,\r\n        description: \"Total Balance\",\r\n        meta: \"Total Balance\",\r\n        style: { overflowWrap: \"break-word\" },\r\n      },\r\n    ];\r\n    return <Card.Group items={items} />;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <h3>Campagin Show</h3>\r\n      {renderCards()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nshow.getInitialProps = async (props) => {\r\n  const campaign = Campaign(props.query.address);\r\n  const result = await campaign.methods.getSummary().call();\r\n  return {\r\n    minimumContribution: result[0],\r\n    balance: result[1],\r\n    requestCount: result[2],\r\n    approversCount: result[3],\r\n    manager: result[4],\r\n  };\r\n};\r\n\r\nexport default show;\r\n"]},"metadata":{},"sourceType":"module"}