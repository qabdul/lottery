{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AbdulQ\\\\Desktop\\\\lottery\\\\pages\\\\campaigns\\\\show.js\";\nimport React from \"react\";\nimport Layout from \"../../component/Layout\";\nimport Campaign from \"../../etherium/Campaign\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from \"../../etherium/web3\";\nimport Contribute from \"../../component/Contribute\";\nimport { Link } from \"../../routes\";\n\nconst show = props => {\n  const renderCards = () => {\n    const {\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager\n    } = props;\n    const items = [{\n      header: manager,\n      description: \"Manager is the only entity who can create request and withdraw money.\",\n      meta: \"Address of Manager\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: minimumContribution,\n      description: \"You must atleast this much wei to campaign\",\n      meta: \"Minimum Contribution(wei)\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: requestCount,\n      description: \"A request tries to withdraw money from contract.Request must be approved by approvers.\",\n      meta: \"No of Request\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: approversCount,\n      description: \"No of people who have donated money to contract.\",\n      meta: \"No of Approvers\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: web3.utils.fromWei(balance, \"ether\"),\n      description: \"Total Balance, how much money to campign to left\",\n      meta: \"Campaign Balance in (ether)\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Campagin Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 10,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", renderCards(), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/campaigns/${props.address}/requests`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                style: {\n                  marginTop: \"10px\"\n                },\n                children: \"View Requests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 6,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Contribute, {\n          address: props.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\nshow.getInitialProps = async props => {\n  const campaign = Campaign(props.query.address);\n  const result = await campaign.methods.getSummary().call();\n  return {\n    minimumContribution: result[0],\n    balance: result[1],\n    requestCount: result[2],\n    approversCount: result[3],\n    manager: result[4],\n    address: props.query.address\n  };\n};\n\nexport default show;","map":{"version":3,"sources":["C:/Users/AbdulQ/Desktop/lottery/pages/campaigns/show.js"],"names":["React","Layout","Campaign","Card","Grid","Button","web3","Contribute","Link","show","props","renderCards","minimumContribution","balance","requestCount","approversCount","manager","items","header","description","meta","style","overflowWrap","utils","fromWei","address","marginTop","getInitialProps","campaign","query","result","methods","getSummary","call"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../../component/Layout\";\r\nimport Campaign from \"../../etherium/Campaign\";\r\nimport { Card, Grid, Button } from \"semantic-ui-react\";\r\nimport web3 from \"../../etherium/web3\";\r\nimport Contribute from \"../../component/Contribute\";\r\nimport { Link } from \"../../routes\";\r\n\r\nconst show = (props) => {\r\n  const renderCards = () => {\r\n    const {\r\n      minimumContribution,\r\n      balance,\r\n      requestCount,\r\n      approversCount,\r\n      manager,\r\n    } = props;\r\n    const items = [\r\n      {\r\n        header: manager,\r\n        description:\r\n          \"Manager is the only entity who can create request and withdraw money.\",\r\n        meta: \"Address of Manager\",\r\n        style: { overflowWrap: \"break-word\" },\r\n      },\r\n      {\r\n        header: minimumContribution,\r\n        description: \"You must atleast this much wei to campaign\",\r\n        meta: \"Minimum Contribution(wei)\",\r\n        style: { overflowWrap: \"break-word\" },\r\n      },\r\n      {\r\n        header: requestCount,\r\n        description:\r\n          \"A request tries to withdraw money from contract.Request must be approved by approvers.\",\r\n        meta: \"No of Request\",\r\n        style: { overflowWrap: \"break-word\" },\r\n      },\r\n      {\r\n        header: approversCount,\r\n        description: \"No of people who have donated money to contract.\",\r\n        meta: \"No of Approvers\",\r\n        style: { overflowWrap: \"break-word\" },\r\n      },\r\n      {\r\n        header: web3.utils.fromWei(balance, \"ether\"),\r\n        description: \"Total Balance, how much money to campign to left\",\r\n        meta: \"Campaign Balance in (ether)\",\r\n        style: { overflowWrap: \"break-word\" },\r\n      },\r\n    ];\r\n    return <Card.Group items={items} />;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <h3>Campagin Details</h3>\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <>\r\n            {\" \"}\r\n            {renderCards()}\r\n            <Link to={`/campaigns/${props.address}/requests`}>\r\n              <a>\r\n                {\" \"}\r\n                <Button primary style={{ marginTop: \"10px\" }}>\r\n                  View Requests\r\n                </Button>\r\n              </a>\r\n            </Link>\r\n          </>\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n          {\" \"}\r\n          <Contribute address={props.address} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nshow.getInitialProps = async (props) => {\r\n  const campaign = Campaign(props.query.address);\r\n  const result = await campaign.methods.getSummary().call();\r\n  return {\r\n    minimumContribution: result[0],\r\n    balance: result[1],\r\n    requestCount: result[2],\r\n    approversCount: result[3],\r\n    manager: result[4],\r\n    address: props.query.address,\r\n  };\r\n};\r\n\r\nexport default show;\r\n"]},"metadata":{},"sourceType":"module"}