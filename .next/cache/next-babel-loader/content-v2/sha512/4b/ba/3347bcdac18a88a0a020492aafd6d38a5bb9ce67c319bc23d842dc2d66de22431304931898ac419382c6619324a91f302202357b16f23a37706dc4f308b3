{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AbdulQ\\\\Desktop\\\\lottery\\\\pages\\\\campaigns\\\\newcampaign.js\";\nimport { on } from \"mocha/lib/runner\";\nimport React, { useState } from \"react\";\nimport { Header, Button, Form, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../../component/Layout\";\nimport CampaignFactory from \"../../etherium/CampaignFactory\";\nimport web3 from \"../../etherium/web3\";\n\nconst newcampaign = () => {\n  const {\n    0: value,\n    1: setValue\n  } = useState();\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: load,\n    1: setLoad\n  } = useState(false);\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n\n    if (!isNaN(value)) {\n      console.log(value);\n      setValue(value);\n    }\n  };\n\n  const onSubmit = async () => {\n    try {\n      setLoad(true);\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0]);\n      const result = await CampaignFactory.methods.createCampaign(value).send({\n        from: accounts[0]\n      });\n      console.log(result);\n      setLoad(false);\n    } catch (error) {\n      setLoad(false);\n      setData(error.message);\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h3\",\n      children: \"Create a Campaign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      error: !!data,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Minimum Contribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Wei\",\n          labelPosition: \"right\",\n          onChange: e => handleChange(e),\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        content: data,\n        header: \"OOPS!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        loading: load,\n        onClick: onSubmit,\n        primary: true,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\nexport default newcampaign;","map":{"version":3,"sources":["C:/Users/AbdulQ/Desktop/lottery/pages/campaigns/newcampaign.js"],"names":["on","React","useState","Header","Button","Form","Input","Message","Layout","CampaignFactory","web3","newcampaign","value","setValue","data","setData","load","setLoad","handleChange","e","target","isNaN","console","log","onSubmit","accounts","eth","getAccounts","result","methods","createCampaign","send","from","error","message"],"mappings":";;AAAA,SAASA,EAAT,QAAmB,kBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,OAAtC,QAAqD,mBAArD;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACY,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACc,IAAD;AAAA,OAAOC;AAAP,MAAkBf,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEP,MAAAA;AAAF,QAAYO,CAAC,CAACC,MAApB;;AACA,QAAI,CAACC,KAAK,CAACT,KAAD,CAAV,EAAmB;AACjBU,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,GAND;;AAQA,QAAMY,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACFP,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,YAAMQ,QAAQ,GAAG,MAAMf,IAAI,CAACgB,GAAL,CAASC,WAAT,EAAvB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAAC,CAAD,CAApB;AACA,YAAMG,MAAM,GAAG,MAAMnB,eAAe,CAACoB,OAAhB,CAAwBC,cAAxB,CAAuClB,KAAvC,EAA8CmB,IAA9C,CAAmD;AACtEC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADwD,OAAnD,CAArB;AAGAH,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACAX,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KATD,CASE,OAAOgB,KAAP,EAAc;AACdhB,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAF,MAAAA,OAAO,CAACkB,KAAK,CAACC,OAAP,CAAP;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD;AACF,GAfD;;AAgBA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAC,CAACnB,IAAf;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,aAAa,EAAC,OAFhB;AAGE,UAAA,QAAQ,EAAGK,CAAD,IAAOD,YAAY,CAACC,CAAD,CAH/B;AAIE,UAAA,KAAK,EAAEP;AAJT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,OAAO,EAAEE,IAAxB;AAA8B,QAAA,MAAM,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cAVF,eAYE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEE,IAAjB;AAAuB,QAAA,OAAO,EAAEQ,QAAhC;AAA0C,QAAA,OAAO,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAjDD;;AAmDA,eAAeb,WAAf","sourcesContent":["import { on } from \"mocha/lib/runner\";\r\nimport React, { useState } from \"react\";\r\nimport { Header, Button, Form, Input, Message } from \"semantic-ui-react\";\r\nimport Layout from \"../../component/Layout\";\r\nimport CampaignFactory from \"../../etherium/CampaignFactory\";\r\nimport web3 from \"../../etherium/web3\";\r\n\r\nconst newcampaign = () => {\r\n  const [value, setValue] = useState();\r\n  const [data, setData] = useState();\r\n  const [load, setLoad] = useState(false);\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    if (!isNaN(value)) {\r\n      console.log(value);\r\n      setValue(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      setLoad(true);\r\n      const accounts = await web3.eth.getAccounts();\r\n      console.log(accounts[0]);\r\n      const result = await CampaignFactory.methods.createCampaign(value).send({\r\n        from: accounts[0],\r\n      });\r\n      console.log(result);\r\n      setLoad(false);\r\n    } catch (error) {\r\n      setLoad(false);\r\n      setData(error.message);\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Header as=\"h3\">Create a Campaign</Header>\r\n      <Form error={!!data}>\r\n        <Form.Field>\r\n          <label>Minimum Contribution</label>\r\n          <Input\r\n            label=\"Wei\"\r\n            labelPosition=\"right\"\r\n            onChange={(e) => handleChange(e)}\r\n            value={value}\r\n          />\r\n        </Form.Field>\r\n        <Message error content={data} header=\"OOPS!\" />\r\n\r\n        <Button loading={load} onClick={onSubmit} primary>\r\n          Create\r\n        </Button>\r\n      </Form>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default newcampaign;\r\n"]},"metadata":{},"sourceType":"module"}