{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AbdulQ\\\\Desktop\\\\lottery\\\\pages\\\\campaigns\\\\requests\\\\index.js\";\nimport React, { useState } from \"react\";\nimport Layout from \"../../../component/Layout\";\nimport NoDataFound from \"../../../component/NoDataFound\";\nimport { Button, Table, Grid } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\nimport web3 from \"../../../etherium/web3\";\nimport Campaign from \"../../../etherium/Campaign\";\nimport RequestRow from \"../../../component/RequestRow\";\n\nconst index = props => {\n  const {\n    Header,\n    Body,\n    HeaderCell,\n    Cell,\n    Row\n  } = Table;\n  const {\n    0: data,\n    1: setData\n  } = useState(false);\n  console.log(props.requests.length + \" requests\");\n\n  const renderRows = () => {\n    return props.requests.map((request, index) => {\n      return /*#__PURE__*/_jsxDEV(RequestRow, {\n        request: request,\n        address: props.address,\n        id: index,\n        total: props.totalApprovers\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All the Request Created for this Campaign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/campaigns/${props.address}`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                floated: \"left\",\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/campaigns/${props.address}/requests/new`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                floated: \"right\",\n                children: \"Create Request\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Recepient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Approval Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Approve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                  children: \"Finalize\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n              children: renderRows()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), props.requests.length === 0 ? /*#__PURE__*/_jsxDEV(NoDataFound, {\n            message: \"Not Data Found, Please click on create Request button to create new one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nindex.getInitialProps = async props => {\n  const address = props.query.address;\n  const campaign = Campaign(props.query.address);\n  const requestsCount = await campaign.methods.getRequestsCount().call();\n  const totalApprovers = await campaign.methods.approversCount().call();\n  const requests = await Promise.all(Array(parseInt(requestsCount)).fill().map((element, index) => {\n    return campaign.methods.requests(index).call();\n  }));\n  console.log(requests);\n  return {\n    address,\n    requests,\n    requestsCount,\n    totalApprovers\n  };\n};\n\nexport default index;","map":{"version":3,"sources":["C:/Users/AbdulQ/Desktop/lottery/pages/campaigns/requests/index.js"],"names":["React","useState","Layout","NoDataFound","Button","Table","Grid","Link","web3","Campaign","RequestRow","index","props","Header","Body","HeaderCell","Cell","Row","data","setData","console","log","requests","length","renderRows","map","request","address","totalApprovers","getInitialProps","query","campaign","requestsCount","methods","getRequestsCount","call","approversCount","Promise","all","Array","parseInt","fill","element"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Layout from \"../../../component/Layout\";\r\nimport NoDataFound from \"../../../component/NoDataFound\";\r\nimport { Button, Table, Grid } from \"semantic-ui-react\";\r\nimport { Link } from \"../../../routes\";\r\nimport web3 from \"../../../etherium/web3\";\r\nimport Campaign from \"../../../etherium/Campaign\";\r\nimport RequestRow from \"../../../component/RequestRow\";\r\n\r\nconst index = (props) => {\r\n  const { Header, Body, HeaderCell, Cell, Row } = Table;\r\n  const [data, setData] = useState(false);\r\n  console.log(props.requests.length + \" requests\");\r\n\r\n  const renderRows = () => {\r\n    return props.requests.map((request, index) => {\r\n      return (\r\n        <RequestRow\r\n          key={index}\r\n          request={request}\r\n          address={props.address}\r\n          id={index}\r\n          total={props.totalApprovers}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <h3>All the Request Created for this Campaign</h3>\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Link to={`/campaigns/${props.address}`}>\r\n              <a>\r\n                {\" \"}\r\n                <Button primary={true} floated=\"left\">\r\n                  Back\r\n                </Button>\r\n              </a>\r\n            </Link>{\" \"}\r\n            <Link to={`/campaigns/${props.address}/requests/new`}>\r\n              <a>\r\n                {\" \"}\r\n                <Button primary={true} floated=\"right\">\r\n                  Create Request\r\n                </Button>\r\n              </a>\r\n            </Link>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Table>\r\n              <Header>\r\n                <Row>\r\n                  <HeaderCell>ID</HeaderCell>\r\n                  <HeaderCell>Description</HeaderCell>\r\n                  <HeaderCell>Amount</HeaderCell>\r\n                  <HeaderCell>Recepient</HeaderCell>\r\n                  <HeaderCell>Approval Count</HeaderCell>\r\n                  <HeaderCell>Approve</HeaderCell>\r\n                  <HeaderCell>Finalize</HeaderCell>\r\n                </Row>\r\n              </Header>\r\n              <Table.Body>{renderRows()}</Table.Body>\r\n            </Table>\r\n            {props.requests.length === 0 ? (\r\n              <NoDataFound message=\"Not Data Found, Please click on create Request button to create new one\" />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nindex.getInitialProps = async (props) => {\r\n  const address = props.query.address;\r\n  const campaign = Campaign(props.query.address);\r\n  const requestsCount = await campaign.methods.getRequestsCount().call();\r\n  const totalApprovers = await campaign.methods.approversCount().call();\r\n\r\n  const requests = await Promise.all(\r\n    Array(parseInt(requestsCount))\r\n      .fill()\r\n      .map((element, index) => {\r\n        return campaign.methods.requests(index).call();\r\n      })\r\n  );\r\n  console.log(requests);\r\n\r\n  return {\r\n    address,\r\n    requests,\r\n    requestsCount,\r\n    totalApprovers,\r\n  };\r\n};\r\n\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}