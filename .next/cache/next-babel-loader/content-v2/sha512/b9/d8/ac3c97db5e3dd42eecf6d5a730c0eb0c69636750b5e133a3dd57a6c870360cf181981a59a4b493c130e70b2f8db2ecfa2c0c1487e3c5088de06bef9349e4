{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AbdulQ\\\\Desktop\\\\lottery\\\\pages\\\\campaigns\\\\show.js\";\nimport React from \"react\";\nimport Layout from \"../../component/Layout\";\nimport Campaign from \"../../etherium/Campaign\";\nimport { Card } from \"semantic-ui-react\";\n\nconst show = props => {\n  const renderCards = () => {\n    const {\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager\n    } = props;\n    const items = [{\n      header: manager,\n      description: \"Manager is the only entity who can create request and withdraw money.\",\n      meta: \"Address of Manager\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Campagin Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), renderCards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nshow.getInitialProps = async props => {\n  const campaign = Campaign(props.query.address);\n  const result = await campaign.methods.getSummary().call();\n  return {\n    minimumContribution: result[0],\n    balance: result[1],\n    requestCount: result[2],\n    approversCount: result[3],\n    manager: result[4]\n  };\n};\n\nexport default show;","map":{"version":3,"sources":["C:/Users/AbdulQ/Desktop/lottery/pages/campaigns/show.js"],"names":["React","Layout","Campaign","Card","show","props","renderCards","minimumContribution","balance","requestCount","approversCount","manager","items","header","description","meta","style","overflowWrap","getInitialProps","campaign","query","address","result","methods","getSummary","call"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAM;AACJC,MAAAA,mBADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,YAHI;AAIJC,MAAAA,cAJI;AAKJC,MAAAA;AALI,QAMFN,KANJ;AAOA,UAAMO,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEF,OADV;AAEEG,MAAAA,WAAW,EACT,uEAHJ;AAIEC,MAAAA,IAAI,EAAE,oBAJR;AAKEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AALT,KADY,CAAd;AASA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEL;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAlBD;;AAoBA,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,WAAW,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3BD;;AA6BAF,IAAI,CAACc,eAAL,GAAuB,MAAOb,KAAP,IAAiB;AACtC,QAAMc,QAAQ,GAAGjB,QAAQ,CAACG,KAAK,CAACe,KAAN,CAAYC,OAAb,CAAzB;AACA,QAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAArB;AACA,SAAO;AACLlB,IAAAA,mBAAmB,EAAEe,MAAM,CAAC,CAAD,CADtB;AAELd,IAAAA,OAAO,EAAEc,MAAM,CAAC,CAAD,CAFV;AAGLb,IAAAA,YAAY,EAAEa,MAAM,CAAC,CAAD,CAHf;AAILZ,IAAAA,cAAc,EAAEY,MAAM,CAAC,CAAD,CAJjB;AAKLX,IAAAA,OAAO,EAAEW,MAAM,CAAC,CAAD;AALV,GAAP;AAOD,CAVD;;AAYA,eAAelB,IAAf","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../../component/Layout\";\r\nimport Campaign from \"../../etherium/Campaign\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nconst show = (props) => {\r\n  const renderCards = () => {\r\n    const {\r\n      minimumContribution,\r\n      balance,\r\n      requestCount,\r\n      approversCount,\r\n      manager,\r\n    } = props;\r\n    const items = [\r\n      {\r\n        header: manager,\r\n        description:\r\n          \"Manager is the only entity who can create request and withdraw money.\",\r\n        meta: \"Address of Manager\",\r\n        style: { overflowWrap: \"break-word\" },\r\n      },\r\n    ];\r\n    return <Card.Group items={items} />;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <h3>Campagin Show</h3>\r\n      {renderCards()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nshow.getInitialProps = async (props) => {\r\n  const campaign = Campaign(props.query.address);\r\n  const result = await campaign.methods.getSummary().call();\r\n  return {\r\n    minimumContribution: result[0],\r\n    balance: result[1],\r\n    requestCount: result[2],\r\n    approversCount: result[3],\r\n    manager: result[4],\r\n  };\r\n};\r\n\r\nexport default show;\r\n"]},"metadata":{},"sourceType":"module"}