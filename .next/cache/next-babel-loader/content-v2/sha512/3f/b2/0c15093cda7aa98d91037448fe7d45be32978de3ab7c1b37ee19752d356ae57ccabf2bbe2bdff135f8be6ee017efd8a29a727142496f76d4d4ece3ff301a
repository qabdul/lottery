{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Table, Button, Icon } from \"semantic-ui-react\";\nimport Campaign from \"../etherium/Campaign\";\nimport web3 from \"../etherium/web3\";\nimport { Router } from \"../routes\";\nimport ModalPopUp from \"./ModalPopUp\";\n\nconst RequestRow = props => {\n  const {\n    0: desible,\n    1: setDesible\n  } = useState(true);\n  const {\n    0: load,\n    1: setLoad\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState(false);\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: compelete,\n    1: setComplete\n  } = useState({\n    approve: false,\n    finalize: false\n  });\n\n  const approveRequest = async () => {\n    try {\n      setOpen(true);\n      setLoad(true);\n      setData(\"\");\n      props.setError(\"\");\n      const campaign = Campaign(props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approveRequests(props.id).send({\n        from: accounts[0]\n      });\n      Router.replaceRoute(`/campaigns/${props.address}/requests`);\n      setLoad(false);\n      setOpen(false);\n      setComplete(_objectSpread(_objectSpread({}, compelete), {}, {\n        approve: true\n      }));\n    } catch (error) {\n      setOpen(false);\n      setLoad(false);\n      props.setError(error.message);\n      setData(error.message);\n    }\n  };\n\n  const finalizeRequest = async () => {\n    try {\n      setOpen(true);\n      props.setError(\"\");\n      const campaign = Campaign(props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(props.id).send({\n        from: accounts[0]\n      });\n      Router.replaceRoute(`/campaigns/${props.address}/requests`);\n      setOpen(false);\n      setComplete(_objectSpread(_objectSpread({}, compelete), {}, {\n        finalize: true\n      }));\n    } catch (error) {\n      setOpen(false);\n      props.setError(error.message);\n      setData(error.message);\n    }\n  };\n\n  const {\n    Row,\n    Cell\n  } = Table;\n  return /*#__PURE__*/_jsxs(Row, {\n    children: [/*#__PURE__*/_jsx(ModalPopUp, {\n      open: open\n    }), /*#__PURE__*/_jsx(Cell, {\n      children: props.id + 1\n    }), /*#__PURE__*/_jsx(Cell, {\n      children: props.request.description\n    }), /*#__PURE__*/_jsx(Cell, {\n      children: props.request.value\n    }), /*#__PURE__*/_jsx(Cell, {\n      children: props.request.recipient\n    }), /*#__PURE__*/_jsx(Cell, {\n      children: `${props.request.approvalCount}/${props.total}`\n    }), /*#__PURE__*/_jsx(Cell, {\n      children: /*#__PURE__*/_jsx(Button, {\n        color: \"green\",\n        loading: load,\n        onClick: approveRequest,\n        children: \"Approve\"\n      })\n    }), /*#__PURE__*/_jsx(Cell, {\n      children: compelete.finalize ? /*#__PURE__*/_jsx(Icon, {\n        name: \"check\",\n        color: \"green\",\n        size: \"large\"\n      }) : /*#__PURE__*/_jsx(Button, {\n        color: \"teal\",\n        onClick: finalizeRequest,\n        children: \"Finalize\"\n      })\n    })]\n  });\n};\n\nexport default RequestRow;","map":null,"metadata":{},"sourceType":"module"}