{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\AbdulQ\\\\Desktop\\\\lottery\\\\component\\\\ModalPopUp.jsx\",\n    _this = this;\n\nimport React from \"react\";\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\n\nvar ModalPopUp = function ModalPopUp(props) {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    basic: true,\n    open: props.open,\n    size: \"small\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      icon: true,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"archive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, _this), \"Archive Old Messages\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Message, {\n        icon: true,\n        success: true,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"spinner\",\n          loading: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Message.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n            children: \"It might take 40 secs to processed your request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, _this), \"Your transaction is being processed, please wait...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ModalPopUp;\nexport default ModalPopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalPopUp\");","map":{"version":3,"sources":["C:/Users/AbdulQ/Desktop/lottery/component/ModalPopUp.jsx"],"names":["React","Button","Header","Icon","Modal","ModalPopUp","props","open"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,QAA4C,mBAA5C;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAEA,KAAK,CAACC,IAAzB;AAA+B,IAAA,IAAI,EAAC,OAApC;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,MAAZ;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,eADF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,KAAD,CAAO,OAAP;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,IAAI,MAAb;AAAc,QAAA,OAAO,MAArB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAqB,UAAA,OAAO;AAA5B;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,OAAD,CAAS,OAAT;AAAA,kCACE,QAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA2BD,CA5BD;;KAAMF,U;AA8BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\r\n\r\nconst ModalPopUp = (props) => {\r\n  return (\r\n    <Modal basic open={props.open} size=\"small\">\r\n      <Header icon>\r\n        <Icon name=\"archive\" />\r\n        Archive Old Messages\r\n      </Header>\r\n      <Modal.Content>\r\n        <Message icon success>\r\n          <Icon name=\"spinner\" loading />\r\n          <Message.Content>\r\n            <Message.Header>\r\n              It might take 40 secs to processed your request\r\n            </Message.Header>\r\n            Your transaction is being processed, please wait...\r\n          </Message.Content>\r\n        </Message>\r\n      </Modal.Content>\r\n      {/* <Modal.Actions>\r\n        <Button basic color=\"red\" inverted onClick={() => setOpen(false)}>\r\n          <Icon name=\"remove\" /> No\r\n        </Button>\r\n        <Button color=\"green\" inverted onClick={() => setOpen(false)}>\r\n          <Icon name=\"checkmark\" /> Yes\r\n        </Button>\r\n      </Modal.Actions> */}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalPopUp;\r\n"]},"metadata":{},"sourceType":"module"}